name: Deploy (Manual)

on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run ID to retrieve PR information'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check if the Artifact exists
      - name: Check if PR Info Artifact exists
        id: check-artifact
        run: |
          # Check if the artifact exists by calling GitHub API
          artifact_id=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | \
            jq -r ".artifacts[] | select(.name == \"pr-info-${{ github.event.inputs.run_id }}\") | .id")

          # Save the artifact ID if exists
          if [ -n "$artifact_id" ]; then
            echo "Artifact found."
            echo "artifact_id=$artifact_id" >> $GITHUB_ENV
          else
            echo "Artifact not found."
            exit 1
          fi

      # Step 2: Download the Artifact if it exists
      - name: Download PR Info Artifact
        if: env.artifact_id != ''
        run: |
          echo "Downloading artifact..."
          curl -L -o pr-info-${{ github.event.inputs.run_id }}.zip -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ env.artifact_id }}/zip"

      # Step 3: Unzip the downloaded artifact
      - name: Extract Artifact
        if: env.artifact_id != ''
        run: |
          echo "Extracting artifact..."
          unzip pr-info-${{ github.event.inputs.run_id }}.zip -d ./artifact

      - name: Clean JSON file
        run: |
          tr -d '\000-\031' < ./artifact/pr-info.json > cleaned.json
          cat cleaned.json

      - name: Read PR Info from Cleaned JSON
        run: |
          PR_TITLE=$(jq -r '.title' cleaned.json)
          PR_BODY=$(jq -r '.body' cleaned.json)
          PR_AUTHOR=$(jq -r '.author' cleaned.json)
          
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_BODY<<EOF" >> $GITHUB_ENV
          echo "$PR_BODY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "PR_AUTHOR=$PR_AUTHOR" >> $GITHUB_ENV
